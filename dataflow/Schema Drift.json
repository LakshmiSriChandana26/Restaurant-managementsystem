{
	"name": "Schema Drift",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sales_raw",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Schemadrift_output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as string,",
				"          CustomerID as string,",
				"          OrderDate as string,",
				"          ProductID as string,",
				"          ProductCategory as string,",
				"          Quantity as string,",
				"          UnitPrice as string,",
				"          SalesAmount as string,",
				"          Phone as string,",
				"          Region as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          OrderID,",
				"          CustomerID,",
				"          OrderDate,",
				"          ProductID,",
				"          ProductCategory,",
				"          Quantity,",
				"          UnitPrice,",
				"          SalesAmount,",
				"          Phone,",
				"          Region",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as string,",
				"          CustomerName as string,",
				"          ContactFirstName as string,",
				"          ContactLastName as string,",
				"          Phone as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          Country as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}